package com.xyz.app;

import com.codename1.capture.Capture;
import com.codename1.components.InfiniteProgress;
import com.codename1.io.Log;
import com.codename1.location.Location;
import com.codename1.location.LocationManager;
import com.codename1.ui.Button;
import com.codename1.ui.CheckBox;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.ui.Command;
import com.codename1.ui.Dialog;
import com.codename1.ui.FontImage;
import com.codename1.ui.Graphics;
import com.codename1.ui.Image;
import com.codename1.ui.Label;
import com.codename1.ui.NavigationCommand;
import com.codename1.ui.RadioButton;
import com.codename1.ui.Slider;
import com.codename1.ui.TextField;
import com.codename1.ui.Toolbar;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.plaf.Style;
import java.io.IOException;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    private Form home;
    private GuiComponent form;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
    }

    public void start() {
        if (current != null) {
            current.show();
            return;
        }
        
       form =  new GuiComponent();
       
       form.show();
       
       getLocation();
     
       //capturePic();
        
        

//        //create and build the home Form
//        home = new Form("Home");
//        home.setLayout(new BoxLayout(BoxLayout.Y_AXIS));
//        home.addComponent(new Label("This is a Label"));
//        home.addComponent(new Button("This is a Button"));
//        TextField txt = new TextField();
//        txt.setHint("This is a TextField");
//        home.addComponent(txt);
//        home.addComponent(new CheckBox("This is a CheckBox"));
//        RadioButton rb1 = new RadioButton("This is a Radio Button 1");
//        rb1.setGroup("group");
//        home.addComponent(rb1);
//        RadioButton rb2 = new RadioButton("This is a Radio Button 2");
//        rb2.setGroup("group");
//        home.addComponent(rb2);
//        final Slider s = new Slider();
//        s.setText("50%");
//        s.setProgress(50);
//        s.setEditable(true);
//        s.setRenderPercentageOnTop(true);
//        home.addComponent(s);
//        
//        Button b1 = new Button("Show a Dialog");
//        b1.addActionListener(new ActionListener() {
//
//            @Override
//            public void actionPerformed(ActionEvent evt) {
//                Dialog.show("Dialog Title", "Dialog Body", "Ok", "Cancel");
//            }
//        });
//        home.addComponent(b1);
//        
//        //Create Form1 and Form2 and set a Back Command to navigate back to the home Form        
//        Form form1 = new Form("Form1");
//        setBackCommand(form1);
//        Form form2 = new Form("Form2");
//        setBackCommand(form2);
//
//        //Add navigation commands to the home Form
//        NavigationCommand homeCommand = new NavigationCommand("Home");
//        homeCommand.setNextForm(home);
//        home.getToolbar().addCommandToSideMenu(homeCommand);
//
//        NavigationCommand cmd1 = new NavigationCommand("Form1");
//        cmd1.setNextForm(form1);
//        home.getToolbar().addCommandToSideMenu(cmd1);
//
//        NavigationCommand cmd2 = new NavigationCommand("Form2");
//        cmd2.setNextForm(form2);
//        home.getToolbar().addCommandToSideMenu(cmd2);
//
//        //Add Edit, Add and Delete Commands to the home Form context Menu
//        Image im = FontImage.createMaterial(FontImage.MATERIAL_MODE_EDIT, UIManager.getInstance().getComponentStyle("Command"));
//        Command edit = new Command("Edit", im) {
//
//            @Override
//            public void actionPerformed(ActionEvent evt) {
//                System.out.println("Editing");
//            }
//        };
//        home.getToolbar().addCommandToOverflowMenu(edit);
//
//        im = FontImage.createMaterial(FontImage.MATERIAL_LIBRARY_ADD, UIManager.getInstance().getComponentStyle("Command"));
//        Command add = new Command("Add", im) {
//
//            @Override
//            public void actionPerformed(ActionEvent evt) {
//                System.out.println("Adding");
//            }
//        };
//        home.getToolbar().addCommandToOverflowMenu(add);
//
//        im = FontImage.createMaterial(FontImage.MATERIAL_DELETE, UIManager.getInstance().getComponentStyle("Command"));
//        Command delete = new Command("Delete", im) {
//
//            @Override
//            public void actionPerformed(ActionEvent evt) {
//                System.out.println("Deleting");
//            }
//
//        };
//        home.getToolbar().addCommandToOverflowMenu(delete);
//
//        home.show();
//    }
//
//    protected void setBackCommand(Form f) {
//        Command back = new Command("") {
//
//            @Override
//            public void actionPerformed(ActionEvent evt) {
//                home.showBack();
//            }
//
//        };
//        Image img = FontImage.createMaterial(FontImage.MATERIAL_ARROW_BACK, UIManager.getInstance().getComponentStyle("TitleCommand"));
//        back.setIcon(img);
//        f.getToolbar().addCommandToLeftBar(back);
//        f.getToolbar().setTitleCentered(true);
//        f.setBackCommand(back);



    }

    public void stop() {
        current = Display.getInstance().getCurrent();
    }

    public void destroy() {
    }
    
    
    public void getLocation()
    {
        //Check if location is turned on and your app is allowed to use it.
if (Display.getInstance().getLocationManager().isGPSDetectionSupported()) {
    if (Display.getInstance().getLocationManager().isGPSEnabled()) {
        InfiniteProgress ip = new InfiniteProgress();
        final Dialog ipDlg = ip.showInifiniteBlocking();
        //Cancel after 20 seconds
        Location loc = LocationManager.getLocationManager().getCurrentLocationSync(20000);
        ipDlg.dispose();
        if (loc != null) {
            double lat = loc.getLatitude();
            double lng = loc.getLongitude();
            try {
                 Dialog.show("GEO Location", "Latitude"+ lat+"   longitude"+lng, "Ok", "Cancel");
                //Display.getInstance().sendSMS("09560580899", "http://maps.google.com/?q=" + lat + "," + lng, false);
            } catch (Exception ex) {
                Dialog.show("Error!", "Failed to start.  installed?", "OK", null);
                ex.printStackTrace();
            }
        } else {
            Dialog.show("GPS error", "Your location could not be found, please try going outside for a better GPS signal", "Ok", null);
        }
    } else {
        Dialog.show("GPS disabled", "AppName needs access to GPS. Please enable GPS", "Ok", null);
    }
} else {
    InfiniteProgress ip = new InfiniteProgress();
    final Dialog ipDlg = ip.showInifiniteBlocking();
    //Cancel after 20 seconds
    Location loc = LocationManager.getLocationManager().getCurrentLocationSync(20000);
    ipDlg.dispose();
    if (loc != null) {
        double lat = loc.getLatitude();
        double lng = loc.getLongitude();
        try {
            Dialog.show("GEO Location", "Latitude"+ lat+"   longitude"+lng, "Ok", "Cancel");
            //Display.getInstance().sendSMS("09560580899", "http://maps.google.com/?q=" + lat + "," + lng, false);
        } catch (Exception ex) {
            Dialog.show("Error!", "Failed to start.  installed?", "OK", null);
            ex.printStackTrace();
        }
    } else {
        Dialog.show("GPS error", "Your location could not be found, please try going outside for a better GPS signal", "Ok", null);
    }
}
    }
    
    
    public void capturePic()
    {
        Toolbar.setGlobalToolbar(true);
Form hi = new Form("Rounder", new BorderLayout());
Label picture = new Label("", "Container");
hi.add(BorderLayout.CENTER, picture);
hi.getUnselectedStyle().setBgColor(0xff0000);
hi.getUnselectedStyle().setBgTransparency(255);
Style s = UIManager.getInstance().getComponentStyle("TitleCommand");
Image camera = FontImage.createMaterial(FontImage.MATERIAL_CAMERA, s);
hi.getToolbar().addCommandToRightBar("", camera, (ev) -> {
    try {
        int width = Display.getInstance().getDisplayWidth();
        Image capturedImage = Image.createImage(Capture.capturePhoto(width, -1));
        Image roundMask = Image.createImage(width, capturedImage.getHeight(), 0xff000000);
        Graphics gr = roundMask.getGraphics();
        gr.setColor(0xffffff);
        gr.fillArc(0, 0, width, width, 0, 360);
        Object mask = roundMask.createMask();
        capturedImage = capturedImage.applyMask(mask);
        picture.setIcon(capturedImage);
        hi.revalidate();
    } catch(IOException err) {
        Log.e(err);
    }
});
    }

}
